version: '3'

services:
  kong:
    image: 'gd-kong-gateway'
    networks:
      - gd-network
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: warn
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
    ports:
      - "8001:8001"
      - "8444:8444"
      - "8000:8000"
      - "8443:8443"
      - "9080:9080"
      - "9081:9081"

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - gd-network

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '29092:29092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - gd-network

  notification-db:
    image: 'postgres'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
    volumes:
      - ./gd-notification-ms/db:/docker-entrypoint-initdb.d
    networks:
      - gd-network

  queue-db:
    image: "redis"
    ports:
      - "6379:6379"
    networks:
      - gd-network

  mongo-store:
    image: "mongo"
    ports:
      - "27017:27017"
    networks:
      - gd-network

  notification-ms:
    image: 'gd-notification-ms'
    ports:
      - '3000:3000'
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_HOST: "notification-db"
      POSTGRES_DBNAME: "gd-notification-ms"
      KAFKA_URL: "kafka:9092"
      KAFKA_TOPIC: "notification"

    depends_on:
      - notification-db
    networks:
      - gd-network

  telemessenger-ms:
    image: "gd-telemessenger-ms"
    ports:
      - "3001:3001"
    environment:
      TELEGRAM_BOT_KEY: '6440570082:AAEydONrrATMun4ccOeCDcTe6YyShNVq_zs'
      MONGO_CONN_URI: 'mongodb://mongo-store:27017'
      MONGO_DB_NAME: 'users'
      MONGO_COLL_NAME: 'telegram_subscribers'
      KAFKA_URL: "kafka:9092"
    networks:
      - gd-network

  queue-ms:
    image: "gd-queue-ms"
    ports:
      - "3002:3002"
    environment:
      REDIS_URL: "redis://queue-db:6379"
    networks:
      - gd-network


  join-queue-cms:
    image: "gd-join-queue-cms"
    ports:
      - "3003:3003"
    environment:
      GPRC_SERVER_QUEUE: "queue-ms:3002"
      GPRC_SERVER_NOTIFICATION: "notification-ms:3000"
      KAFKA_URL:  "kafka:9092"
      KAFKA_TOPIC:  "logs"
    networks:
      - gd-network

#  log-ms:
#    image: "gd-log-ms"
#    ports:
#      - "3004:3004"
#    environment:
#      MONGO_CONN_URI: 'mongodb://mongo-store:27017'
#      MONGO_DB_NAME: 'logs'
#      MONGO_COLL_NAME: 'request_response_error'
#      KAFKA_URL: "kafka:9092"
#    networks:
#      - gd-network

networks:
  gd-network:
    driver: bridge

